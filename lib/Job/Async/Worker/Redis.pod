=for comment POD_DERIVED_INDEX_GENERATED
The following documentation is automatically generated.  Please do not edit
this file, but rather the original, inline with Job::Async::Worker::Redis
at lib/Job/Async/Worker/Redis.pm
(on the system that originally ran this).
If you do edit this file, and don't want your changes to be removed, make
sure you change the first line.

=cut

=head1 NAME

Job::Async::Worker::Redis - L<Net::Async::Redis> worker implementation for L<Job::Async::Worker>

=head1 SYNOPSIS

=head1 DESCRIPTION

=head2 incoming_job

Source for jobs received from the C<BRPOP(LPUSH)> queue wait.

=head2 on_job_received

Called for each job that's received.

=head2 pending_queues

Note that L<reliable mode|Job::Async::Redis/reliable> only
supports a single queue, and will fail if you attempt to start with multiple
queues defined.

=head2 processing_queue

=head2 start

=head2 stop

Requests to stop processing.

Returns a future which will complete when all currently-processing jobs have
finished.

=head2 max_concurrent_jobs

Number of jobs to process in parallel. Defaults to 1.

=head2 job_poll_interval

Polling interval (e.g. for C<BRPOPLPUSH> in C<reliable> mode), in seconds.

Defaults to 3 seconds.

=head1 INHERITED METHODS

=over 4

=item L<Job::Async::Worker>

L<id|Job::Async::Worker/id>, L<jobs|Job::Async::Worker/jobs>, L<ryu|Job::Async::Worker/ryu>, L<timeout|Job::Async::Worker/timeout>

=item L<IO::Async::Notifier>

L<add_child|IO::Async::Notifier/add_child>, L<adopt_future|IO::Async::Notifier/adopt_future>, L<adopted_futures|IO::Async::Notifier/adopted_futures>, L<can_event|IO::Async::Notifier/can_event>, L<children|IO::Async::Notifier/children>, L<configure_unknown|IO::Async::Notifier/configure_unknown>, L<debug_printf|IO::Async::Notifier/debug_printf>, L<get_loop|IO::Async::Notifier/get_loop>, L<invoke_error|IO::Async::Notifier/invoke_error>, L<invoke_event|IO::Async::Notifier/invoke_event>, L<loop|IO::Async::Notifier/loop>, L<make_event_cb|IO::Async::Notifier/make_event_cb>, L<maybe_invoke_event|IO::Async::Notifier/maybe_invoke_event>, L<maybe_make_event_cb|IO::Async::Notifier/maybe_make_event_cb>, L<new|IO::Async::Notifier/new>, L<notifier_name|IO::Async::Notifier/notifier_name>, L<parent|IO::Async::Notifier/parent>, L<remove_child|IO::Async::Notifier/remove_child>, L<remove_from_parent|IO::Async::Notifier/remove_from_parent>

=back

=head1 AUTHOR

Tom Molesworth <TEAM@cpan.org>

=head1 LICENSE

Copyright Tom Molesworth 2016-2019. Licensed under the same terms as Perl itself.

